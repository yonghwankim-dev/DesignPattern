package chapter03_SOLID원칙.practice.p04_DIP_DependencyInversionPrinciple;

public class Main {

	public static void main(String[] args) {
		// 아이 객체 생성
		Kid kid = new Kid();
		
		// 로봇 장난감 객체 생성, 주입
		Toy robot = new Robot();
		kid.setToy(robot);
		kid.play();
		
		// 레고 장난감 객체 생성, 주입
		Toy lego = new Lego();
		kid.setToy(lego);
		kid.play();
	}

}

// DIP(Dependency Inversion Principle, 의존 역전 원칙)
// 1. DIP는 의존 관계를 맺을 때 변화하기 쉬운 것 도는 자주 변화하는 것보다는 변화하기 어려운 것, 거의 변화가 없는 것에 의존하라는 원칙이다.
// 2. 객체지향 관점에서는 변하기 어려운 추상적인 것들을 표현하는 수단으로 추상 클래스와 인터페이스가 존재한다.